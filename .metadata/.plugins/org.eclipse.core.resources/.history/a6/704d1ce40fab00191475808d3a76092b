package in.grocery;

import java.util.HashMap;
import java.util.Map;

import in.grocery.inventory.items.Item;

/**
 * @author Manosivam
 *
 */

//TODO: do we need Interface for this???
public class Cart{
	
	private Map<Item, Integer> itemCounts;
	double totalPrizeBeforeApplyingDiscount;
	double totalPrizeAfterApplyingDiscount;
	
	public Cart(){
		itemCounts = new HashMap<Item, Integer>();
		totalPrizeBeforeApplyingDiscount = 0;
		totalPrizeAfterApplyingDiscount = 0;
	}
	
	public Map<Item, Integer> getItemCounts()
	{
		return this.itemCounts;
	}
	
	public void setItemCounts(Map<Item,Integer> itemCounts)
	{
		this.itemCounts = itemCounts;
	}
	
	public double getTotalAmountSaved()
	{
		return this.totalPrizeBeforeApplyingDiscount - this.totalPrizeAfterApplyingDiscount;
	}
	
	public double getTotalPrizeBeforeApplyingDiscount()
	{
		return this.totalPrizeBeforeApplyingDiscount;
	}
	
	public double getTotalPrizeAfterApplyingDiscount()
	{
		return this.totalPrizeAfterApplyingDiscount;
	}
	
	public void loadItems(Item item, int count)
	{
		
		if(this.itemCounts.containsKey(item))
		{
			int earlierCount = this.itemCounts.get(item);
			
		}
		this.itemCounts.put(item, count);
		this.totalPrizeBeforeApplyingDiscount+= (item.getMRP() + item.getTax()) *count; 
	}
	
	/*
	 * unload can be done one by one. Can't unload multiple items at once.
	 */
	public void unLoadItem(Item item)
	{
		this.totalPrizeBeforeApplyingDiscount-= (item.)
		this.itemCounts.remove(item);
	}
	
}
