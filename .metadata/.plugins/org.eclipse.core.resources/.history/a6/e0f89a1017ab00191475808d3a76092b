package in.grocery.registers;

import in.grocery.Cart;
import in.grocery.backend.BackendLayer;
import in.grocery.customers.Card;
import in.grocery.customers.Customer;

/**
 * @author Manosivam
 *
 */
public class RegisterHandler implements IRegisterHandler{

	public boolean acceptOrderAndProcessPayment(Customer customer, String pin, boolean applyDiscountsOnCustomerType, 
			boolean applyDisccountsOnItemOrItemType) throws InterruptedException
	{
		
		double amountToPay = 0;
		if(applyDiscountsOnCustomerType)
		{
			amountToPay = customer.getCart().getCartValue() - (this.cart.getCartValue() * this.discountPercent/100);
		}
		else if(applyDisccountsOnItemOrItemType)
		{
			amountToPay = customer.getCart().recomputeCartValueAfterApplyingDiscounts();
		}
		else 
		{
			amountToPay = customer.getCart().getCartValue();
		}
		
		Register register = BackendLayer.getAvailableRegisterInstance();
		while(register!=null)
		{
			if(register == null)
			{
				Thread.sleep(1500);// 1.5 seconds and try again. 
				register = BackendLayer.getAvailableRegisterInstance();
			}
		}
		return register.acceptOrderAndProcessPayment(customer, pin, boolean applyDiscountsOnCustomerType, 
				boolean applyDisccountsOnItemOrItemType);
	}
}
